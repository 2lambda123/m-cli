#!/bin/sh

# TODO: add more functionalities

help(){
    cat<<__EOF__
    usage: m finder [ showhiddenfiles | showfileextensions | showdesktop | help ]

    Examples:
      m finder showhiddenfiles           # get the current status
      m finder showhiddenfiles YES       # show hidden files
      m finder showhiddenfiles NO        # don't show hidden files
      m finder showextensions            # get the current status
      m finder showextensions YES        # show all file extensions
      m finder showextensions NO         # don't show all file extensions
      m finder showdesktop               # get the current desktop status
      m finder showdesktop YES           # enable the desktop
      m finder showdesktop NO            # disable the desktop
__EOF__
}

hidden_files(){
    case $1 in
        [yY][eE][sS])
            echo "Show Hidden files: YES"
            defaults write com.apple.finder AppleShowAllFiles YES
            ;;
        [nN][oO])
            echo "Show Hidden files: NO"
            defaults write com.apple.finder AppleShowAllFiles NO
            ;;
        *)
            HIDDEN_FILE_STATUS=$(defaults read com.apple.finder AppleShowAllFiles 2>/dev/null | tr '[:upper:]' '[:lower:]')
            if \
              [ -z "$HIDDEN_FILE_STATUS" ] || \
              [ "$HIDDEN_FILE_STATUS" = "false" ] || \
              [ "$HIDDEN_FILE_STATUS" = "no" ] || \
              [ "$HIDDEN_FILE_STATUS" -eq 0 ] ; then
                HIDDEN_FILE_STATUS_WORD="NO"
            else
                HIDDEN_FILE_STATUS_WORD="YES"
            fi
            echo "Show hidden files: $HIDDEN_FILE_STATUS_WORD"
            exit 1
            ;;
    esac
    killall Finder
}

file_extensions(){
    case $1 in
        [yY][eE][sS])
            echo "Show file extensions: YES"
            defaults write NSGlobalDomain AppleShowAllExtensions YES
            ;;
        [nN][oO])
            echo "Show file extensions: NO"
            defaults write NSGlobalDomain AppleShowAllExtensions NO
            ;;
        *)
            EXTENSION_STATUS=$(defaults read NSGlobalDomain AppleShowAllExtensions 2>/dev/null | tr '[:upper:]' '[:lower:]')
            if \
              [ -z "$EXTENSION_STATUS" ] || \
              [ "$EXTENSION_STATUS" = "false" ] || \
              [ "$EXTENSION_STATUS" = "no" ] || \
              [ "$EXTENSION_STATUS" -eq 0 ] ; then
                EXTENSION_STATUS_WORD="NO"
            else
                EXTENSION_STATUS_WORD="YES"
            fi
            echo "Show file extensions: $EXTENSION_STATUS_WORD"
            exit 1
            ;;
    esac
    killall Finder
}

desktop(){
    case $1 in
        [yY][eE][sS])
            echo "Enable desktop: YES"
            defaults write com.apple.finder CreateDesktop -bool TRUE
            ;;
        [nN][oO])
            echo "Enable desktop: NO"
            defaults write com.apple.finder CreateDesktop -bool FALSE
            ;;
        *)
            DESKTOP_STATUS=$(defaults read com.apple.finder CreateDesktop 2>/dev/null | tr '[:upper:]' '[:lower:]')
            if \
              [ -z "$DESKTOP_STATUS" ] || \
              [ "$DESKTOP_STATUS" = "true" ] || \
              [ "$DESKTOP_STATUS" = "yes" ] || \
              [ "$DESKTOP_STATUS" -eq 1 ] ; then
                DESKTOP_STATUS_WORD="enabled"
            else
                DESKTOP_STATUS_WORD="enabled"
            fi
            echo "Desktop: $DESKTOP_STATUS_WORD"
            ;;
    esac
    killall Finder
}

case $1 in
    help)
        help
        ;;
    showhiddenfiles)
        shift
        hidden_files $@
        ;;
    showextensions)
        shift
        file_extensions $@
        ;;
    showdesktop)
        shift
        desktop $@
        ;;
    *)
        help
        ;;
esac

# vim: set ts=4 sw=4 softtabstop=4 expandtab
